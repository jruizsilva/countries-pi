{"version":3,"sources":["components/CountryPage/CountryPage.module.css","redux/ducks/tourist_activity.js","components/Message/Message.js","components/Country/Country.js","redux/ducks/countries.js","components/Pagination/Pagination.js","components/Spinner/Spinner.js","components/Countries/Countries.js","components/Filter/Filter.js","components/Search/Search.js","components/Main/Main.js","components/Navbar/Navbar.js","helpers/validate.js","components/AddTouristActivity/AddTouristActivity.js","components/Activity/Activity.js","components/ListActivities/ListActivities.js","components/TouristActivities/TouristActivities.js","components/ActivityPage/ActivityPage.js","components/CountryPage/CountryPage.js","components/App/App.js","redux/rootReducer.js","redux/configureStore.js","reportWebVitals.js","index.js","components/Country/Country.module.css","components/Navbar/Navbar.module.css","components/Filter/Filter.module.css","components/Search/Search.module.css","components/Countries/Countries.module.css","components/Main/Main.module.css","components/Message/Message.module.css","components/Pagination/Pagination.module.css","components/Spinner/Spinner.module.css","components/AddTouristActivity/AddTouristActivity.module.css","components/Activity/Activity.module.css","components/ListActivities/ListActivities.module.css","components/ActivityPage/ActivityPage.module.css"],"names":["module","exports","ADD_TOURIST_ACTIVITY","GET_ALL_TOURIST_ACTIVITIES","GET_ACTIVITY_BY_ID","MODE_ADD_COUNTRIES_TO_ACTIVITY","ADD_COUNTRY_TO_ACTIVITY","SET_SUCCESS","RESET_SUCCESS","GET_COUNTRIES_BY_ACTIVITY","DELETE_ACTIVITY_BY_ID","initialForm","name","difficulty","duration","season","initialState","form","activities","activity","activityCountries","modeAddCountriesToActivity","success","getAllTouristActivities","dispatch","a","instance","axios","create","baseURL","get","res","type","payload","data","console","log","id","getCountriesByActivity","activityId","touristActivityReducer","state","action","style","require","Message","msg","className","error","Country","props","useParams","useDispatch","history","useHistory","flag_image","continent","countryId","useSelector","country","image_container","image","src","alt","country_description","country_name","country_continent","onClick","put","addCountryToActivity","setTimeout","push","FETCH_ALL_COUNTRIES_REQUEST","FETCH_ALL_COUNTRIES_SUCCESS","FETCH_ALL_COUNTRIES_FAILURE","FETCH_COUNTRY_BY_NAME_REQUEST","FETCH_COUNTRY_BY_NAME_SUCCESS","FETCH_COUNTRY_BY_NAME_FAILURE","FILTER_COUNTRIES","SET_FORM","RESET_FORM","NEXT_PAGE","PREV_PAGE","RESET_PAGE","GET_COUNTRY_BY_ID","GET_ACTIVITIES_BY_COUNTRY","tourist_activity","sort","default","population","alphabet","loading","countries","undefined","countryActivities","page","fetchAllCountries","formValues","resetPage","URL","message","resetForm","fetching","countriesReducer","Pagination","pagination","button","prevPage","length","nextPage","Spinner","spinner","Countries","not_found","map","initialSort","Filter","useState","setFormValues","handleFilterForm","e","target","value","useEffect","setForm","select","onChange","disabled","JSON","parse","stringify","Search","input","setInput","setError","onSubmit","preventDefault","countryName","fetchCountryByName","placeholder","Main","window","scrollTo","main","Navbar","navbar","title","to","link","list","li","validateName","trim","validateDifficulty","difficult","validateDuration","validateSeason","AddTouristActivity","handleFormValues","contenedor","body","nameResult","difficultyResult","durationResult","seasonResult","validate","post","box","htmlFor","label","autoComplete","Activity","idParams","location","useLocation","card","p","span","pathname","includes","ul","delete","confirm","ListActivities","actividades","TouristActivities","ActivityPage","getActivityById","CountryPage","getCountryById","img","flag","capital","subregion","area","App","path","exact","component","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a4e2438.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contenedor\":\"CountryPage_contenedor__1tYEB\",\"title\":\"CountryPage_title__37YqP\",\"p\":\"CountryPage_p__2ASxT\",\"img\":\"CountryPage_img__1xxUf\",\"card\":\"CountryPage_card__GZGHf\",\"actividades\":\"CountryPage_actividades__jpCW3\",\"not_found\":\"CountryPage_not_found__2TtNf\"};","import axios from \"axios\";\r\nconst ADD_TOURIST_ACTIVITY = \"tourist_activity/ADD_TOURIST_ACTIVITY\";\r\nconst RESET_FORM = \"tourist_activity/RESET_FORM\";\r\nconst SET_FORM = \"tourist_activity/SET_FORM\";\r\nconst GET_ALL_TOURIST_ACTIVITIES =\r\n  \"tourist_activity/GET_ALL_TOURIST_ACTIVITIES\";\r\nconst GET_ACTIVITY_BY_ID = \"tourist_activity/GET_ACTIVITY_BY_ID\";\r\nconst MODE_ADD_COUNTRIES_TO_ACTIVITY =\r\n  \"tourist_activity/MODE_ADD_COUNTRIES_TO_ACTIVITY\";\r\nconst ADD_COUNTRY_TO_ACTIVITY = \"tourist_activity/ADD_COUNTRY_TO_ACTIVITY\";\r\nconst SET_SUCCESS = \"tourist_activity/SET_SUCCESS\";\r\nconst RESET_SUCCESS = \"tourist_activity/RESET_SUCCESS\";\r\nconst GET_COUNTRIES_BY_ACTIVITY = \"tourist_activity/GET_COUNTRIES_BY_ACTIVITY\";\r\nconst DELETE_ACTIVITY_BY_ID = \"tourist_activity/DELETE_ACTIVITY_BY_ID\";\r\n\r\nconst initialForm = {\r\n  name: \"\",\r\n  difficulty: \"\",\r\n  duration: \"\",\r\n  season: \"\",\r\n};\r\n\r\nconst initialState = {\r\n  initialForm,\r\n  form: initialForm,\r\n  activities: [],\r\n  activity: {},\r\n  activityCountries: [],\r\n  modeAddCountriesToActivity: false,\r\n  success: \"\",\r\n};\r\n\r\nconst touristActivityReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TOURIST_ACTIVITY:\r\n      return state;\r\n    case GET_ALL_TOURIST_ACTIVITIES:\r\n      return { ...state, activities: action.payload };\r\n    case GET_ACTIVITY_BY_ID:\r\n      return { ...state, activity: action.payload };\r\n    case MODE_ADD_COUNTRIES_TO_ACTIVITY:\r\n      return { ...state, modeAddCountriesToActivity: action.payload };\r\n    case ADD_COUNTRY_TO_ACTIVITY:\r\n      return state;\r\n    case SET_SUCCESS:\r\n      return { ...state, success: action.payload };\r\n    case RESET_SUCCESS:\r\n      return { ...state, success: \"\" };\r\n    case GET_COUNTRIES_BY_ACTIVITY:\r\n      return { ...state, activityCountries: action.payload };\r\n    case DELETE_ACTIVITY_BY_ID:\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addTouristActivity = (body) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      // body.difficulty = parseInt(body.difficulty);\r\n      console.log(body);\r\n      const instance = axios.create({\r\n        baseURL: \"https://api-restcountries.herokuapp.com\",\r\n      });\r\n      await instance.post(\"/activity\", body);\r\n      dispatch({ type: ADD_TOURIST_ACTIVITY });\r\n      dispatch(getAllTouristActivities());\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const getAllTouristActivities = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const instance = axios.create({\r\n        baseURL: \"https://api-restcountries.herokuapp.com\",\r\n      });\r\n      const res = await instance.get(\"/activity\");\r\n      dispatch({ type: GET_ALL_TOURIST_ACTIVITIES, payload: res.data });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const getActivityById = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const instance = axios.create({\r\n        baseURL: \"https://api-restcountries.herokuapp.com\",\r\n      });\r\n      const res = await instance.get(`/activity/${id}`);\r\n      dispatch({ type: GET_ACTIVITY_BY_ID, payload: res.data });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const modeAddCountriesToActivity = (id) => {\r\n  return {\r\n    type: MODE_ADD_COUNTRIES_TO_ACTIVITY,\r\n    payload: id ? true : false,\r\n  };\r\n};\r\n\r\nexport const resetForm = () => {\r\n  return { type: RESET_FORM };\r\n};\r\nexport const setForm = (formValues) => {\r\n  return { type: SET_FORM, payload: formValues };\r\n};\r\n\r\nexport const addCountryToActivity = (countryId, activityId) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const instance = axios.create({\r\n        baseURL: \"https://api-restcountries.herokuapp.com\",\r\n      });\r\n      await instance.put(`/activity/${activityId}/countries`, { countryId });\r\n      dispatch({ type: ADD_COUNTRY_TO_ACTIVITY });\r\n      dispatch({ type: SET_SUCCESS, payload: \"Agregado correctamente\" });\r\n      dispatch(getCountriesByActivity(activityId));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const getCountriesByActivity = (activityId) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const instance = axios.create({\r\n        baseURL: \"https://api-restcountries.herokuapp.com\",\r\n      });\r\n      const res = await instance.get(`/activity/${activityId}/countries`);\r\n      dispatch({ type: GET_COUNTRIES_BY_ACTIVITY, payload: res.data });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteActivityById = (activityId) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const instance = axios.create({\r\n        baseURL: \"https://api-restcountries.herokuapp.com\",\r\n      });\r\n      const res = await instance.delete(`/activity/${activityId}`);\r\n      console.log(res);\r\n      dispatch({ type: DELETE_ACTIVITY_BY_ID });\r\n      dispatch(getAllTouristActivities());\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const resetSuccess = () => {\r\n  return { type: RESET_SUCCESS };\r\n};\r\n\r\nexport default touristActivityReducer;\r\n","import React from \"react\";\r\nconst style = require(\"./Message.module.css\");\r\n\r\nconst Message = ({ success, msg }) => {\r\n  return (\r\n    <>\r\n      {success ? (\r\n        <div className={style.success}>{msg}</div>\r\n      ) : (\r\n        <div className={style.error}>{msg}</div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  addCountryToActivity,\r\n  resetSuccess,\r\n} from \"../../redux/ducks/tourist_activity\";\r\nimport Message from \"../Message/Message\";\r\nimport style from \"./Country.module.css\";\r\n\r\nconst Country = (props) => {\r\n  const { id: activityId } = useParams();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const {\r\n    name,\r\n    flag_image,\r\n    continent,\r\n    modeAddCountriesToActivity,\r\n    id: countryId,\r\n  } = props;\r\n  const { success } = useSelector((state) => state.activities);\r\n\r\n  const handleClick = () => {\r\n    dispatch(addCountryToActivity(countryId, activityId));\r\n    setTimeout(() => {\r\n      dispatch(resetSuccess());\r\n    }, 2000);\r\n  };\r\n  const handleRedirect = () => {\r\n    history.push(`/paises/${countryId}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={style.country}>\r\n        <div className={style.image_container}>\r\n          <img className={style.image} src={flag_image} alt={name} />\r\n        </div>\r\n        <div className={style.country_description}>\r\n          <div className={style.country_name}>\r\n            <h3>\r\n              <span>País: </span>\r\n              {name}\r\n            </h3>\r\n          </div>\r\n          <div className={style.country_continent}>\r\n            <h4>\r\n              <span>Continente: </span>\r\n              {continent}\r\n            </h4>\r\n          </div>\r\n          {modeAddCountriesToActivity ? (\r\n            <div>\r\n              <button onClick={handleClick}>Agregar pais</button>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <button onClick={handleRedirect}>Ver mas</button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {success && <Message success={true} msg={success} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Country;\r\n","import axios from \"axios\";\r\n// fetchAllCountries\r\nconst FETCH_ALL_COUNTRIES_REQUEST = \"countries/FETCH_ALL_COUNTRIES_REQUEST\";\r\nconst FETCH_ALL_COUNTRIES_SUCCESS = \"countries/FETCH_ALL_COUNTRIES_SUCCESS\";\r\nconst FETCH_ALL_COUNTRIES_FAILURE = \"countries/FETCH_ALL_COUNTRIES_FAILURE\";\r\n\r\n// fetchCountryByName\r\nconst FETCH_COUNTRY_BY_NAME_REQUEST = \"countries/FETCH_COUNTRY_BY_NAME_REQUEST\";\r\nconst FETCH_COUNTRY_BY_NAME_SUCCESS = \"countries/FETCH_COUNTRY_BY_NAME_SUCCESS\";\r\nconst FETCH_COUNTRY_BY_NAME_FAILURE = \"countries/FETCH_COUNTRY_BY_NAME_FAILURE\";\r\n\r\nconst FILTER_COUNTRIES = \"countries/FILTER_COUNTRIES\";\r\nconst SET_FORM = \"countries/SET_FORM\";\r\nconst RESET_FORM = \"countries/RESET_FORM\";\r\nconst NEXT_PAGE = \"countries/NEXT_PAGE\";\r\nconst PREV_PAGE = \"countries/PREV_PAGE\";\r\nconst RESET_PAGE = \"countries/RESET_PAGE\";\r\nconst GET_COUNTRY_BY_ID = \"countries/GET_COUNTRY_BY_ID\";\r\nconst GET_ACTIVITIES_BY_COUNTRY = \"countries/GET_ACTIVITIES_BY_COUNTRY\";\r\n\r\nconst initialForm = {\r\n  continent: \"\",\r\n  tourist_activity: \"\",\r\n  sort: {\r\n    default: \"default\",\r\n    population: \"\",\r\n    alphabet: \"\",\r\n  },\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  countries: [],\r\n  error: \"\",\r\n  country: undefined,\r\n  countryActivities: undefined,\r\n  initialForm,\r\n  form: initialForm,\r\n  page: 0,\r\n};\r\n\r\nconst countriesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_ALL_COUNTRIES_REQUEST:\r\n      return { ...state, loading: true };\r\n    case FETCH_ALL_COUNTRIES_SUCCESS:\r\n      return { ...state, countries: action.payload, loading: false };\r\n    case FETCH_ALL_COUNTRIES_FAILURE:\r\n      return { ...state, error: action.payload, loading: false };\r\n\r\n    case FETCH_COUNTRY_BY_NAME_REQUEST:\r\n      return { ...state, loading: true };\r\n    case FETCH_COUNTRY_BY_NAME_SUCCESS:\r\n      return { ...state, countries: action.payload, loading: false };\r\n    case FETCH_COUNTRY_BY_NAME_FAILURE:\r\n      return { ...state, error: action.payload, loading: false };\r\n\r\n    case FILTER_COUNTRIES:\r\n      return { ...state, countries: action.payload };\r\n    case SET_FORM:\r\n      return { ...state, form: action.payload };\r\n    case RESET_FORM:\r\n      return { ...state, form: action.payload };\r\n    case NEXT_PAGE:\r\n      return { ...state, page: action.payload };\r\n    case PREV_PAGE:\r\n      return { ...state, page: action.payload };\r\n    case RESET_PAGE:\r\n      return { ...state, page: 0 };\r\n    case GET_COUNTRY_BY_ID:\r\n      return { ...state, country: action.payload };\r\n    case GET_ACTIVITIES_BY_COUNTRY:\r\n      return { ...state, countryActivities: action.payload };\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport const fetchAllCountries = (formValues = initialForm, page) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: FETCH_ALL_COUNTRIES_REQUEST });\r\n    const { continent, tourist_activity, sort } = formValues;\r\n\r\n    if (!page) dispatch(resetPage());\r\n\r\n    const instance = axios.create({\r\n      baseURL: \"https://api-restcountries.herokuapp.com\",\r\n    });\r\n    let URL;\r\n    if (!continent && !tourist_activity && !sort.alphabet && !sort.population) {\r\n      if (page > 0) {\r\n        URL = `/countries?page=${page}`;\r\n      } else {\r\n        URL = `/countries`;\r\n      }\r\n    }\r\n    if (sort.population) {\r\n      if (page > 0) {\r\n        URL = `/countries?sort=population-${sort.population}page=${page}`;\r\n      } else {\r\n        URL = `/countries?sort=population-${sort.population}`;\r\n      }\r\n    }\r\n    if (sort.alphabet) {\r\n      if (page > 0) {\r\n        URL = `/countries?sort=alfhabet-${sort.alphabet}page=${page}`;\r\n      } else {\r\n        URL = `/countries?sort=alfhabet-${sort.alphabet}`;\r\n      }\r\n    }\r\n    if (continent) {\r\n      URL = `/countries/continent/${continent}`;\r\n      if (sort.population) {\r\n        if (page > 0) {\r\n          URL += `?sort=population-${sort.population}page=${page}`;\r\n        } else {\r\n          URL += `?sort=population-${sort.population}`;\r\n        }\r\n      }\r\n      if (sort.alphabet) {\r\n        if (page > 0) {\r\n          URL += `?sort=alphabet-${sort.alphabet}page=${page}`;\r\n        } else {\r\n          URL += `?sort=alfhabet-${sort.alphabet}`;\r\n        }\r\n      }\r\n      if (page > 0 && !sort.population && !sort.alphabet) {\r\n        URL += `?page=${page}`;\r\n      }\r\n    }\r\n    if (tourist_activity) {\r\n      URL = `activity/${tourist_activity}/countries`;\r\n\r\n      if (sort.population) {\r\n        if (page > 0) {\r\n          URL += `?sort=population-${sort.population}page=${page}`;\r\n        } else {\r\n          URL += `?sort=population-${sort.population}`;\r\n        }\r\n      }\r\n      if (sort.alphabet) {\r\n        if (page > 0) {\r\n          URL += `?sort=alphabet-${sort.alphabet}page=${page}`;\r\n        } else {\r\n          URL += `?sort=alfhabet-${sort.alphabet}`;\r\n        }\r\n      }\r\n      if (page > 0 && !sort.population && !sort.alphabet) {\r\n        URL += `?page=${page}`;\r\n      }\r\n      if (continent) {\r\n        if (sort.alphabet || sort.population || sort.page) {\r\n          URL += `continent=${continent}`;\r\n        } else {\r\n          URL += `?continent=${continent}`;\r\n        }\r\n      }\r\n    }\r\n\r\n    try {\r\n      const res = await instance.get(URL);\r\n      dispatch({ type: FETCH_ALL_COUNTRIES_SUCCESS, payload: res.data });\r\n    } catch (error) {\r\n      console.log(error);\r\n      console.log(error.message);\r\n      dispatch({ type: FETCH_ALL_COUNTRIES_REQUEST, payload: error.message });\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchCountryByName = (countryName) => {\r\n  const URL = `https://api-restcountries.herokuapp.com/countries?name=${countryName}`;\r\n  return async (dispatch) => {\r\n    dispatch({ type: FETCH_COUNTRY_BY_NAME_REQUEST });\r\n    dispatch(resetForm(initialForm, true));\r\n    try {\r\n      const res = await axios.get(URL);\r\n      dispatch({ type: FETCH_COUNTRY_BY_NAME_SUCCESS, payload: res.data });\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({ type: FETCH_COUNTRY_BY_NAME_FAILURE, payload: error.message });\r\n    }\r\n  };\r\n};\r\n\r\nexport const getCountryById = (id) => {\r\n  return async (dispatch) => {\r\n    const instance = axios.create({\r\n      baseURL: \"https://api-restcountries.herokuapp.com\",\r\n    });\r\n    const res = await instance.get(`/countries/${id}`);\r\n    dispatch({ type: GET_COUNTRY_BY_ID, payload: res.data });\r\n  };\r\n};\r\n\r\nexport const getActivitiesByCountry = (countryId) => {\r\n  return async (dispatch) => {\r\n    const instance = axios.create({\r\n      baseURL: \"https://api-restcountries.herokuapp.com\",\r\n    });\r\n    const res = await instance.get(`/countries/${countryId}/activities`);\r\n    dispatch({ type: GET_ACTIVITIES_BY_COUNTRY, payload: res.data });\r\n  };\r\n};\r\n\r\nexport const setForm = (form) => {\r\n  return { type: SET_FORM, payload: form };\r\n};\r\n\r\nexport const resetForm = (initialForm, fetching) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: RESET_FORM, payload: initialForm });\r\n    if (!fetching) {\r\n      dispatch(fetchAllCountries());\r\n    }\r\n  };\r\n};\r\n\r\nexport const resetPage = () => {\r\n  return { type: RESET_PAGE };\r\n};\r\n\r\nexport const nextPage = (form, page) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: NEXT_PAGE, payload: page + 1 });\r\n    dispatch(fetchAllCountries(form, page + 1));\r\n  };\r\n};\r\nexport const prevPage = (form, page) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: PREV_PAGE, payload: page - 1 });\r\n    dispatch(fetchAllCountries(form, page - 1));\r\n  };\r\n};\r\n\r\nexport default countriesReducer;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { nextPage, prevPage } from \"../../redux/ducks/countries\";\r\nconst style = require(\"./Pagination.module.css\");\r\n\r\nconst Pagination = () => {\r\n  const dispatch = useDispatch();\r\n  const { form, countries, page } = useSelector((state) => state.countries);\r\n\r\n  const handlePrevClick = () => {\r\n    dispatch(prevPage(form, page));\r\n  };\r\n  const handleNextClick = () => {\r\n    dispatch(nextPage(form, page));\r\n  };\r\n\r\n  return (\r\n    <div className={style.pagination}>\r\n      {page > 0 && (\r\n        <button className={style.button} onClick={handlePrevClick}>\r\n          Anterior\r\n        </button>\r\n      )}\r\n      {countries && countries.length > 8 && (\r\n        <button className={style.button} onClick={handleNextClick}>\r\n          Siguiente\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nconst style = require(\"./Spinner.module.css\");\r\n\r\nconst Spinner = () => {\r\n  return <div className={style.spinner}></div>;\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Country from \"../Country/Country\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport style from \"./Countries.module.css\";\r\n\r\nconst Countries = ({ modeAddCountriesToActivity }) => {\r\n  const { countries, loading } = useSelector((state) => state.countries);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : countries && countries.length === 0 ? (\r\n        <p className={style.not_found}>No se encontraron resultados</p>\r\n      ) : (\r\n        <div className={style.countries}>\r\n          {countries &&\r\n            countries.length > 0 &&\r\n            countries.map((country) => (\r\n              <Country\r\n                key={country.id}\r\n                {...country}\r\n                modeAddCountriesToActivity={modeAddCountriesToActivity}\r\n              />\r\n            ))}\r\n\r\n          {countries && countries.length > 8 && <Pagination />}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Countries;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchAllCountries, setForm } from \"../../redux/ducks/countries\";\r\nimport style from \"./Filter.module.css\";\r\n\r\nconst initialSort = {\r\n  default: \"default\",\r\n  population: \"\",\r\n  alphabet: \"\",\r\n};\r\n\r\nconst Filter = ({ modeAddCountriesToActivity }) => {\r\n  const dispatch = useDispatch();\r\n  const { initialForm, form } = useSelector((state) => state.countries);\r\n  const { activities } = useSelector((state) => state.activities);\r\n  const [formValues, setFormValues] = useState(form);\r\n\r\n  const handleFilterForm = (e) => {\r\n    setFormValues({ ...formValues, [e.target.name]: e.target.value });\r\n  };\r\n  const handleSortForm = (e) => {\r\n    const sort = JSON.parse(e.target.value);\r\n\r\n    setFormValues({\r\n      ...formValues,\r\n      sort: {\r\n        ...initialSort,\r\n        ...sort,\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const { continent, tourist_activity, sort } = form;\r\n    if (!continent && !tourist_activity && !sort.population && !sort.alphabet) {\r\n      setFormValues(initialForm);\r\n    }\r\n  }, [form, initialForm]);\r\n\r\n  useEffect(() => {\r\n    const { continent, tourist_activity, sort } = formValues;\r\n    if (continent || tourist_activity || sort.population || sort.alphabet) {\r\n      console.log(\"entre\");\r\n      dispatch(setForm(formValues));\r\n      dispatch(fetchAllCountries(formValues));\r\n    }\r\n  }, [formValues, dispatch]);\r\n\r\n  return (\r\n    <form className={style.form}>\r\n      <select\r\n        className={style.select}\r\n        name=\"continent\"\r\n        onChange={handleFilterForm}\r\n        value={formValues.continent}\r\n      >\r\n        {/* Africa Asia Americas Oceania Antarctic Europe */}\r\n        <option value=\"\" disabled>\r\n          Seleccione un continente\r\n        </option>\r\n        <option value=\"Africa\">África</option>\r\n        <option value=\"Americas\">América</option>\r\n        <option value=\"Asia\">Asia</option>\r\n        <option value=\"Europe\">Europa</option>\r\n        <option value=\"Oceania\">Oceanía</option>\r\n        <option value=\"Antarctic\">Antártida</option>\r\n      </select>\r\n\r\n      {!modeAddCountriesToActivity && (\r\n        <select\r\n          className={style.select}\r\n          name=\"tourist_activity\"\r\n          onChange={handleFilterForm}\r\n          value={formValues.tourist_activity}\r\n        >\r\n          <option value=\"\" disabled>\r\n            Seleccione una actividad turistica\r\n          </option>\r\n          {activities &&\r\n            activities.length > 0 &&\r\n            activities.map((activity) => (\r\n              <option key={activity.id} value={activity.id}>\r\n                {activity.name}\r\n              </option>\r\n            ))}\r\n        </select>\r\n      )}\r\n\r\n      <select\r\n        className={style.select}\r\n        name=\"sort\"\r\n        onChange={handleSortForm}\r\n        value={formValues.sort.default}\r\n      >\r\n        <option value=\"default\" disabled>\r\n          Ordenar paises por:\r\n        </option>\r\n\r\n        <option value={JSON.stringify({ population: \"asc\" })}>\r\n          Población ▲\r\n        </option>\r\n        <option value={JSON.stringify({ population: \"desc\" })}>\r\n          Población ▼\r\n        </option>\r\n\r\n        <option value={JSON.stringify({ alphabet: \"asc\" })}>Alfabeto ▲</option>\r\n        <option value={JSON.stringify({ alphabet: \"desc\" })}>Alfabeto ▼</option>\r\n      </select>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchCountryByName, resetForm } from \"../../redux/ducks/countries\";\r\nimport Message from \"../Message/Message\";\r\nimport style from \"./Search.module.css\";\r\n\r\nconst initialInputValue = \"\";\r\n\r\nconst Search = () => {\r\n  const dispatch = useDispatch();\r\n  const { initialForm } = useSelector((state) => state.countries);\r\n  const [input, setInput] = useState(initialInputValue);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleInput = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (input.length < 3) {\r\n      console.log(\"Ingrese minimo 3 caracteres\");\r\n      setError(\"Ingrese minimo 3 caracteres\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 3000);\r\n    } else {\r\n      dispatch(fetchCountryByName(input));\r\n      setInput(initialInputValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={style.form} onSubmit={handleSubmit}>\r\n        <input\r\n          className={style.input}\r\n          type=\"search\"\r\n          placeholder=\"Buscar país\"\r\n          value={input}\r\n          onChange={handleInput}\r\n        />\r\n        <input className={style.button} type=\"submit\" value=\"Buscar\" />\r\n        <input\r\n          className={style.button}\r\n          type=\"button\"\r\n          value=\"Reset\"\r\n          onClick={() => dispatch(resetForm(initialForm))}\r\n        />\r\n      </form>\r\n      {error && <Message success={false} msg={error} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Countries from \"../Countries/Countries\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport Search from \"../Search/Search\";\r\nimport { main } from \"./Main.module.css\";\r\n\r\nconst Main = () => {\r\n  const { modeAddCountriesToActivity } = useSelector(\r\n    (state) => state.activities\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={main}>\r\n      <Search />\r\n      <Filter modeAddCountriesToActivity={modeAddCountriesToActivity} />\r\n      <Countries modeAddCountriesToActivity={modeAddCountriesToActivity} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { fetchAllCountries, resetForm } from \"../../redux/ducks/countries\";\r\nimport { modeAddCountriesToActivity } from \"../../redux/ducks/tourist_activity\";\r\nimport style from \"./Navbar.module.css\";\r\n\r\nconst Navbar = () => {\r\n  const dispatch = useDispatch();\r\n  const { initialForm } = useSelector((state) => state.countries);\r\n\r\n  const handleHomeClick = () => {\r\n    dispatch(modeAddCountriesToActivity());\r\n    dispatch(resetForm(initialForm));\r\n    dispatch(fetchAllCountries());\r\n  };\r\n  const handleActivitiesClick = () => {\r\n    dispatch(resetForm(initialForm));\r\n  };\r\n\r\n  return (\r\n    <nav className={style.navbar}>\r\n      <h1 className={style.title}>\r\n        <NavLink to=\"/\" onClick={handleHomeClick} className={style.link}>\r\n          Countries\r\n        </NavLink>\r\n      </h1>\r\n      <ul className={style.list}>\r\n        <li className={style.li}>\r\n          <NavLink\r\n            to=\"/actividades\"\r\n            onClick={handleActivitiesClick}\r\n            className={style.link}\r\n          >\r\n            Actividades turisticas\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","export const validate = (formValues) => {\r\n  const { name, difficult, duration, season } = formValues;\r\n  const nameResult = validateName(name);\r\n  if (!nameResult.success) return nameResult;\r\n\r\n  const difficultyResult = validateDifficulty(difficult);\r\n  if (!difficultyResult.success) return difficultyResult;\r\n\r\n  const durationResult = validateDuration(duration);\r\n  if (!durationResult.success) return durationResult;\r\n\r\n  const seasonResult = validateSeason(season);\r\n  if (!seasonResult.success) return seasonResult;\r\n\r\n  return {\r\n    success: true,\r\n    msg: \"\",\r\n  };\r\n};\r\n\r\nconst validateName = (name) => {\r\n  name = name.trim();\r\n  if (name === \"\") return { success: false, msg: \"Ingrese el nombre\" };\r\n  if (name.length < 3)\r\n    return {\r\n      success: false,\r\n      msg: \"La actividad debe tener minimo 3 caracteres\",\r\n    };\r\n  return {\r\n    success: true,\r\n    msg: \"\",\r\n  };\r\n};\r\n\r\nconst validateDifficulty = (difficult) => {\r\n  if (difficult === \"\")\r\n    return { success: false, msg: \"Ingrese una dificultad\" };\r\n  return {\r\n    success: true,\r\n    msg: \"\",\r\n  };\r\n};\r\n\r\nconst validateDuration = (duration) => {\r\n  if (duration === \"\") return { success: false, msg: \"Ingrese una duracion\" };\r\n  return {\r\n    success: true,\r\n    msg: \"\",\r\n  };\r\n};\r\n\r\nconst validateSeason = (season) => {\r\n  if (season === \"\") return { success: false, msg: \"Ingrese una temporada\" };\r\n  return {\r\n    success: true,\r\n    msg: \"\",\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { validate } from \"../../helpers/validate\";\r\nimport {\r\n  addTouristActivity,\r\n  resetForm,\r\n  setForm,\r\n} from \"../../redux/ducks/tourist_activity\";\r\nimport Message from \"../Message/Message\";\r\nconst style = require(\"./AddTouristActivity.module.css\");\r\n\r\nconst AddTouristActivity = () => {\r\n  const { initialForm } = useSelector((state) => state.activities);\r\n  const dispatch = useDispatch();\r\n  const [formValues, setFormValues] = useState(initialForm);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleFormValues = (e) => {\r\n    setFormValues({ ...formValues, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { success, msg } = validate(formValues);\r\n    if (success) {\r\n      setError(\"\");\r\n      // Add activity\r\n      dispatch(setForm(formValues));\r\n      dispatch(addTouristActivity(formValues));\r\n      setFormValues(initialForm);\r\n    } else {\r\n      setError(msg);\r\n    }\r\n    setTimeout(() => {\r\n      setError(\"\");\r\n    }, 3000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const { name, difficulty, duration, season } = formValues;\r\n    if (!name && !difficulty && !duration && !season) {\r\n      dispatch(resetForm());\r\n    }\r\n  }, [formValues, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <div className={style.contenedor}>\r\n        <h2 className={style.title}>Agrega actividades turisticas</h2>\r\n\r\n        <form onSubmit={handleSubmit} className={style.form}>\r\n          <div className={style.box}>\r\n            <label htmlFor=\"name\" className={style.label}>\r\n              Nombre:\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              onChange={handleFormValues}\r\n              value={formValues.name}\r\n              className={style.input}\r\n              autoComplete=\"off\"\r\n            />\r\n          </div>\r\n          <div className={style.box}>\r\n            <label htmlFor=\"difficulty\" className={style.label}>\r\n              Dificultad:\r\n            </label>\r\n            <select\r\n              name=\"difficulty\"\r\n              id=\"difficulty\"\r\n              onChange={handleFormValues}\r\n              value={formValues.difficulty}\r\n              className={style.select}\r\n            >\r\n              <option value=\"\">Seleccione una dificultad</option>\r\n              <option value={1}>1</option>\r\n              <option value={2}>2</option>\r\n              <option value={3}>3</option>\r\n              <option value={4}>4</option>\r\n              <option value={5}>5</option>\r\n            </select>\r\n          </div>\r\n          <div className={style.box}>\r\n            <label htmlFor=\"duration\" className={style.label}>\r\n              Duración:\r\n            </label>\r\n            <select\r\n              name=\"duration\"\r\n              id=\"duration\"\r\n              onChange={handleFormValues}\r\n              value={formValues.duration}\r\n              className={style.select}\r\n            >\r\n              <option value=\"\">Seleccione la duracion</option>\r\n              <option value=\"1 hora\">1 hora</option>\r\n              <option value=\"2 hora\">2 hora</option>\r\n              <option value=\"3 hora\">3 hora</option>\r\n              <option value=\"4 hora\">4 hora</option>\r\n              <option value=\"5 hora\">5 hora</option>\r\n            </select>\r\n          </div>\r\n          <div className={style.box}>\r\n            <label htmlFor=\"season\" className={style.label}>\r\n              Temporada:\r\n            </label>\r\n            <select\r\n              name=\"season\"\r\n              id=\"season\"\r\n              onChange={handleFormValues}\r\n              value={formValues.season}\r\n              className={style.select}\r\n            >\r\n              <option value=\"\">Seleccione la temporada</option>\r\n              <option value=\"Verano\">Verano</option>\r\n              <option value=\"Otoño\">Otoño</option>\r\n              <option value=\"Invierno\">Invierno</option>\r\n              <option value=\"Primavera\">Primavera</option>\r\n            </select>\r\n          </div>\r\n          <input type=\"submit\" value=\"Agregar\" className={style.button} />\r\n        </form>\r\n      </div>\r\n      {error && <Message success={false} msg={error} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTouristActivity;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useParams } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { fetchAllCountries } from \"../../redux/ducks/countries\";\r\nimport { deleteActivityById } from \"../../redux/ducks/tourist_activity\";\r\nconst style = require(\"./Activity.module.css\");\r\n\r\nconst Activity = (props) => {\r\n  const { id: idParams } = useParams();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const { name, difficulty, duration, season, id, activityCountries } = props;\r\n\r\n  const handleDelete = () => {\r\n    const yes = window.confirm(\r\n      `¿Estas seguro que desea eliminar la actividad ${name}?`\r\n    );\r\n    if (yes) dispatch(deleteActivityById(id));\r\n  };\r\n\r\n  return (\r\n    <div className={style.card}>\r\n      <h3 className={style.title}>{name}</h3>\r\n      <p className={style.p}>\r\n        Dificultad: <span className={style.span}>{difficulty}</span>\r\n      </p>\r\n      <p className={style.p}>\r\n        Duración: <span className={style.span}>{duration}</span>\r\n      </p>\r\n      <p className={style.p}>\r\n        Temporada: <span className={style.span}>{season}</span>\r\n      </p>\r\n      {location.pathname.includes(\"paises\") ? null : idParams ? (\r\n        <>\r\n          <p className={style.p}>\r\n            La actividad se realiza en{\" \"}\r\n            <span className={style.span}>\r\n              {activityCountries && activityCountries.length}{\" \"}\r\n            </span>\r\n            paises\r\n          </p>\r\n          {activityCountries && activityCountries.length > 0 && (\r\n            <ul className={style.ul}>\r\n              {activityCountries.map((country) => (\r\n                <li className={style.li} key={country.id}>\r\n                  {country.name}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <NavLink\r\n            to={`/actividades/${id}`}\r\n            onClick={() => dispatch(fetchAllCountries())}\r\n            className={style.button}\r\n          >\r\n            Agregar paises\r\n          </NavLink>\r\n          <div className={style.delete} onClick={handleDelete}>\r\n            <span className=\"material-symbols-outlined\">delete</span>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Activity;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Activity from \"../Activity/Activity\";\r\nconst style = require(\"./ListActivities.module.css\");\r\n\r\nconst ListActivities = () => {\r\n  const { activities } = useSelector((state) => state.activities);\r\n\r\n  return (\r\n    <>\r\n      <h2 className={style.title}>Actividades turisticas</h2>\r\n      <div className={style.actividades}>\r\n        {activities &&\r\n          activities.length > 0 &&\r\n          activities.map((activity) => (\r\n            <Activity key={activity.id} {...activity} />\r\n          ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListActivities;\r\n","import React, { useEffect } from \"react\";\r\nimport AddTouristActivity from \"../AddTouristActivity/AddTouristActivity\";\r\nimport ListActivities from \"../ListActivities/ListActivities\";\r\n\r\nconst TouristActivities = () => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n  return (\r\n    <>\r\n      <AddTouristActivity />\r\n      <ListActivities />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TouristActivities;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  getActivityById,\r\n  getCountriesByActivity,\r\n  modeAddCountriesToActivity,\r\n} from \"../../redux/ducks/tourist_activity\";\r\nimport Activity from \"../Activity/Activity\";\r\nimport Main from \"../Main/Main\";\r\nconst style = require(\"./ActivityPage.module.css\");\r\n\r\nconst ActivityPage = () => {\r\n  const { id } = useParams();\r\n  const { activity, activityCountries } = useSelector(\r\n    (state) => state.activities\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!id) return;\r\n    dispatch(getActivityById(id));\r\n    dispatch(getCountriesByActivity(id));\r\n    dispatch(modeAddCountriesToActivity(id));\r\n  }, [id, dispatch]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className={style.contenedor}>\r\n        <Activity {...activity} activityCountries={activityCountries} />\r\n      </div>\r\n      {id && <Main />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ActivityPage;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  getActivitiesByCountry,\r\n  getCountryById,\r\n} from \"../../redux/ducks/countries\";\r\nimport Activity from \"../Activity/Activity\";\r\nconst style = require(\"./CountryPage.module.css\");\r\n\r\nconst CountryPage = () => {\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const dispatch = useDispatch();\r\n  const { country, countryActivities } = useSelector(\r\n    (state) => state.countries\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(getCountryById(id));\r\n    dispatch(getActivitiesByCountry(id));\r\n  }, [id, dispatch]);\r\n\r\n  return (\r\n    <div className={style.contenedor}>\r\n      <h3 className={style.title}>{country?.name}</h3>\r\n      <div className={style.card}>\r\n        <img\r\n          src={country?.flag_image}\r\n          alt={country?.name}\r\n          className={style.img}\r\n        />\r\n        <p className={style.p}>Codigo: {country?.flag}</p>\r\n        <p className={style.p}>Continente: {country?.continent}</p>\r\n        <p className={style.p}>Capital: {country?.capital}</p>\r\n        <p className={style.p}>Subregion: {country?.subregion}</p>\r\n        <p className={style.p}>Area: {country?.area} km²</p>\r\n        <p className={style.p}>Población: {country?.population}</p>\r\n      </div>\r\n\r\n      <h3 className={style.title}>Actividades turisticas que realiza</h3>\r\n      {countryActivities && countryActivities.length === 0 && (\r\n        <p className={style.not_found}>No se encontraron actividades</p>\r\n      )}\r\n      {countryActivities && countryActivities.length > 0 && (\r\n        <div className={style.actividades}>\r\n          {countryActivities.map((activity) => (\r\n            <Activity key={activity.id} {...activity} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryPage;\r\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Main from \"../Main/Main\";\nimport Navbar from \"../Navbar/Navbar\";\nimport { fetchAllCountries } from \"../../redux/ducks/countries\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport TouristActivities from \"../TouristActivities/TouristActivities\";\nimport { getAllTouristActivities } from \"../../redux/ducks/tourist_activity\";\nimport ActivityPage from \"../ActivityPage/ActivityPage\";\nimport CountryPage from \"../CountryPage/CountryPage\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllCountries());\n    dispatch(getAllTouristActivities());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <BrowserRouter>\n        <Navbar />\n        <Switch>\n          <Route path=\"/\" exact component={Main} />\n          <Route path=\"/actividades\" exact component={TouristActivities} />\n          <Route path=\"/actividades/:id\" exact component={ActivityPage} />\n          <Route path=\"/paises/:id\" exact component={CountryPage} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport countriesReducer from \"./ducks/countries\";\r\nimport touristActivityReducer from \"./ducks/tourist_activity\";\r\n\r\nconst rootReducer = combineReducers({\r\n  countries: countriesReducer,\r\n  activities: touristActivityReducer,\r\n});\r\n\r\nexport { rootReducer };\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { rootReducer } from \"./rootReducer\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./normalize.css\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport store from \"./redux/configureStore\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"country\":\"Country_country__cDnQE\",\"image_container\":\"Country_image_container__3xrPp\",\"image\":\"Country_image__2yb9J\",\"country_description\":\"Country_country_description__1xpDZ\",\"country_name\":\"Country_country_name__3xcuu\",\"country_continent\":\"Country_country_continent__CCbRN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__2V1gu\",\"title\":\"Navbar_title__3usL8\",\"link\":\"Navbar_link__3UF7j\",\"list\":\"Navbar_list__3ymWU\",\"li\":\"Navbar_li__1LO7I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__3tk0y\",\"select\":\"Filter_select__2ArhY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Search_form__3ZrpT\",\"input\":\"Search_input__1tteV\",\"button\":\"Search_button__3j56f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"countries\":\"Countries_countries__10A0C\",\"not_found\":\"Countries_not_found__1vLYm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__3vVSp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"success\":\"Message_success__15B-L\",\"error\":\"Message_error__U0OQR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__OwP_l\",\"button\":\"Pagination_button__2js2M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__1jTIP\",\"spin\":\"Spinner_spin__2arVi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contenedor\":\"AddTouristActivity_contenedor__2Rgl2\",\"title\":\"AddTouristActivity_title__3g6MH\",\"form\":\"AddTouristActivity_form__1rQfc\",\"box\":\"AddTouristActivity_box__3SDAv\",\"label\":\"AddTouristActivity_label__CB8Ys\",\"input\":\"AddTouristActivity_input__Hp-3E\",\"select\":\"AddTouristActivity_select__2meoX\",\"button\":\"AddTouristActivity_button__1mjQG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Activity_card__FWoah\",\"title\":\"Activity_title__3IAR_\",\"p\":\"Activity_p__AZOl_\",\"button\":\"Activity_button__3JJop\",\"span\":\"Activity_span__1vT7m\",\"delete\":\"Activity_delete__1M4i-\",\"ul\":\"Activity_ul__2i2Xw\",\"li\":\"Activity_li__1Eq3G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ListActivities_title__3Am4Z\",\"actividades\":\"ListActivities_actividades__2Vrj6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contenedor\":\"ActivityPage_contenedor__3qrOe\",\"title\":\"ActivityPage_title__zgqRO\",\"p\":\"ActivityPage_p__208uO\"};"],"sourceRoot":""}